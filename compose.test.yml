# Podman Compose file for AIGraphX TESTING environment (v1.0)
# Defines isolated PostgreSQL and Neo4j services for testing.
services:
  # PostgreSQL Test Database Service
  postgres_test:
    image: docker.io/library/postgres:16
    # Use specific TEST environment variables
    environment:
      POSTGRES_USER: ${TEST_POSTGRES_USER:-aigraphx_test_user}
      POSTGRES_PASSWORD: ${TEST_POSTGRES_PASSWORD:-aigraphx_test_password}
      POSTGRES_DB: ${TEST_POSTGRES_DB:-aigraphx_test}
    container_name: aigraphx_postgres_test
    ports:
      - "5433:5432" # Map internal 5432 to host 5433
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - aigraphx_test_network
    restart: unless-stopped
    healthcheck:
      # Use the TEST variables here
      test: ["CMD-SHELL", "pg_isready -U ${TEST_POSTGRES_USER:-aigraphx_test_user} -d ${TEST_POSTGRES_DB:-aigraphx_test}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j Test Database Service
  neo4j_test:
    image: docker.io/library/neo4j:5
    environment:
      # Use TEST password
      NEO4J_AUTH: "neo4j/${TEST_NEO4J_PASSWORD:-test_password_test}"
      # Consider reducing memory for test instances if needed
      # NEO4J_server_memory_pagecache_size: 512m
      # NEO4J_server_memory_heap_initial__size: 512m
      # NEO4J_server_memory_heap_max__size: 512m
    container_name: aigraphx_neo4j_test
    ports:
      - "7688:7687" # Map internal Bolt 7687 to host 7688
      - "7475:7474" # Map internal HTTP 7474 to host 7475
    volumes:
      - neo4j_test_data:/data
      - neo4j_test_logs:/logs
    networks:
      - aigraphx_test_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --spider --tries=1 --timeout=5 http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5

# Define named volumes for test data persistence
volumes:
  postgres_test_data:
  neo4j_test_data:
  neo4j_test_logs:

# Define the custom test network
networks:
  aigraphx_test_network:
    driver: bridge 